@using ContractAndProjectManager.Data
@using ContractAndProjectManager.Entities
@model ContractAndProjectManager.Entities.ProjectStage
@inject ApplicationContext DbContext;

@{
    ViewData["Title"] = "Create";
    var contractStage = ViewBag.ContractStage as ContractStage;
}

<h1>Create</h1>

<h4>ProjectStage</h4>
<hr/>
<div class="row">
    <div class="col-md-6">
        <form asp-action="Create" asp-re>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control"/>
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control"/>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <input hidden asp-for="ProjectId" class="form-control" value="@contractStage?.Contract.Project.Id"/>

            <div class="form-group">
                <label asp-for="ExecutorId" class="control-label"></label>
                <select asp-for="ExecutorId" class="form-control" asp-items="ViewBag.ExecutorId"></select>
            </div>

            <input hidden asp-for="ContractStageId" value="@contractStage?.Id"/>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>